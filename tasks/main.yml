---
- name: Create user
  user:
    name: postgres
    state: present
    create_home: no

- name: Make directories
  file:
    path: "{{ item }}"
    state: directory
    owner: postgres
    group: postgres
  loop:
    - "/opt/postgres_exporter"
    - "/opt/postgres_exporter/tarballs"
    - "/opt/postgres_exporter/bin"

- name: Get postgres_exporter from github
  get_url:
    url: https://github.com/wrouesnel/postgres_exporter/releases/download/v{{ postgres_exporter_version }}/postgres_exporter_v{{ postgres_exporter_version }}_linux-amd64.tar.gz
    dest: /opt/postgres_exporter/tarballs/postgres_exporter-{{ postgres_exporter_version }}.linux-amd64.tar.gz
    owner: postgres
    group: postgres
    checksum: "{{ postgres_exporter_version_checksum }}"

- name: Unpack postgres_exporter into location
  unarchive:
    src: /opt/postgres_exporter/tarballs/postgres_exporter-{{ postgres_exporter_version }}.linux-amd64.tar.gz
    dest: /opt/postgres_exporter/bin/
    owner: postgres
    group: postgres
    remote_src: yes
  notify:
    - "restart postgres_exporter"

- name: Template queries.yaml
  template:
    src: queries.yaml.j2
    dest: /opt/postgres_exporter/queries.yaml
    owner: postgres
    group: postgres
    mode: "u=rw,g=r,o=r"
  notify:
    - "restart postgres_exporter"

- name: Create systemd config
  template:
    src: postgres_exporter.service.j2
    dest: /etc/systemd/system/postgres_exporter.service
    owner: root
    group: root
    mode: "u=rw,g=r,o=r"
  notify:
    - "reload systemd"
    - "restart postgres_exporter"

- name: "Flush handlers"
  meta: flush_handlers

- name: enable postgres_exporter and ensure running
  service:
    name: postgres_exporter
    state: started
    enabled: yes
